#%RAML 1.0
title: API
version: 2.5
protocols: [http, https]
baseUri: http://localhost:3000/api/
baseUriParameters: {}
documentation:
- title: API Docs
  content: 'Empty docs'
securitySchemes:
  auth:
    type: Pass Through
    describedBy:
      headers: 
        authorization:
          required: true
          displayName: authorization
          description: API key to authorize requests. If you don't have an OpenWeatherMap API key, use `fd4698c940c6d1da602a70ac34f0b147`.
          type: string
types:

  NewUserModel: 
    type: object
    required: true
    properties: 
      firstName: 
        type: string
        required: true
      lastName:
        type: string
        required: true
      email:
        type: string
        required: true
      password:
        type: string
        required: true
      repeatPassword: 
        type: string
        required: true  
    example:
      firstName: Max
      lastName: Max
      email: test@test.com
      password: 123qwe
      repeatPassword: 123qwe

  CommentModel: 
    type: object
    required: true
    properties: 
      text: 
        type: string
        required: true
    example:
      text: Simple short comment                

  LoginUserModel:
    type: object    
    required: true
    properties: 
      email:
        type: string
        required: true
      password:
        type: string
        required: true
    example:
      email: test@test.com
      password: 123qwe

  LikeModel: 
    type: object
    properties: 
      liked: 
        required: true
        type: number
        enum: 
        - 0
        - 1
    example:
      liked: 1
 
  AddPostModel: 
    type: object
    properties: 
      description:
        required: true
        displayName: description
        type: string
    example: 
      description: 'Hello'    
/users:
  post:
    description: 'Register new user in system'
    body: 
      application/json:
        type: NewUserModel
  /login:
    post:
      description: Sign in user in system
      body:
        application/json:
          type: LoginUserModel
/posts:
  /{id}:
    /comment: 
      post:
        description: Leave comment under the Post
        securedBy: 
        - auth      
        body: 
          application/json:
            type: CommentModel   
      delete: 
        description: Delete comment
        securedBy: 
        - auth 
      put:
        description: Edit comment
        securedBy: 
        - auth
        body: 
          application/json:
            type: CommentModel                            
    /like: 
      post:
        description: User can live like under Post
        securedBy: 
        - auth   
        body: 
          application/json:
            type: LikeModel
    get:
      displayName: Get Post by id
      securedBy:
      - auth  
      body: 
        application/json:
          type: AddPostModel
    delete:
      displayName: Delete Post
      description: Delete Post by param id
      securedBy:
      - auth   
  put:
    displayName: edit Post
    description: edit Post description
    securedBy: 
    - auth
    body: 
      application/json:
        type: AddPostModel
    responses: 
      200:
        description: Ok
      403:      
        description: Forbidden            
  post:
    displayName: create Post
    description: add new Post can onle register user
    securedBy: 
    - auth
    body: 
      application/json:
        type: AddPostModel
    responses: 
      200:
        description: Ok
      403:      
        description: Forbidden
  get:
    displayName: list osts
    description: Get list of Posts
    securedBy:
    - auth
    queryParameters:
      limit:
        required: false
        displayName: limit
        description: Count posts in answer
        default: 10
        type: integer
      createdAt:
        required: false
        type: string
      offset:
        required: false
        type: integer  
    responses:
      200:
        description: Successful response
        body:
          application/json:
            displayName: response
            description: Successful response
      404:
        description: Not found response
        body: {}