#%RAML 1.0
title: API
version: 2.5
protocols: [http, https]
baseUri: http://localhost:3000/api/
baseUriParameters: {}
documentation:
- title: API Docs
  content: 'Empty docs'
securitySchemes:
  auth:
    type: Pass Through
    describedBy:
      headers: 
        authorization:
          required: true
          displayName: authorization
          description: API key to authorize requests. If you don't have an OpenWeatherMap API key, use `fd4698c940c6d1da602a70ac34f0b147`.
          type: string
types:

  NewUserModel: 
    type: object
    required: true
    properties: 
      firstName: 
        type: string
        required: true
      lastName:
        type: string
        required: true
      email:
        type: string
        required: true
      password:
        type: string
        required: true
    example:
      firstName: Max
      lastName: Max
      email: test@test.com
      password: 123qwe

  LoginUserModel:
    type: object    
    required: true
    properties: 
      email:
        type: string
        required: true
      password:
        type: string
        required: true
    example:
      email: test@test.com
      password: 123qwe
  
  AddPostsModelTest: | 
    {
        "type": "object",
        "required": true,
        "properties": {
          "description": {
            "type": "string",
            "required": true
          }
        }
    }

  AddPostModel: 
    type: object
    properties: 
      description:
        required: true
        displayName: description
        type: string
    example: 
      description: 'Hello'    

  SuccessfulResponse:
    displayName: Successful response
    type: object
    properties:
      coord:
        required: false
        displayName: coord
        type: string
      weather:
        required: false
        displayName: weather
        description: (more info Weather condition codes)
        type: array
        items:
          type: string
/users:
  post:
    description: 'Register new user in system'
    body: 
      application/json:
        type: NewUserModel
  /login:
    post:
      description: 'Sign in user in system'
      body:
        application/json:
          type: LoginUserModel
/posts:
  /{id}:
    get:
    displayName: Get Post by id
    body: 
      application/json:
        type: AddPostModel
  post:
    displayName: Add new Post
    description: add new Post can onle register user
    securedBy: 
    - auth
    body: 
      application/json:
        type: AddPostModel
  get:
    displayName: Get list of posts
    description: Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.
    securedBy:
    - auth
    queryParameters:
      id:
        required: false
        displayName: id
        description: "**City ID**. *Example: `2172797`*. You can call by city ID. API responds with exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs. it's treated as 3 API calls.*"
        type: string
      lat:
        required: false
        displayName: lat
        description: '**Latitude**. *Example: 35*. The latitude cordinate of the location of your interest. Must use with `lon`.'
        type: string
      units:
        required: false
        default: standard
        example:
          value: imperial
        displayName: units
        description: '**Units**. *Example: imperial*. Possible values: `metric`, `imperial`. When you do not use units parameter, format is `standard` by default.'
        type: string
        enum:
        - standard
        - metric
        - imperial
    responses:
      200:
        description: Successful response
        body:
          application/json:
            displayName: response
            description: Successful response
            type: SuccessfulResponse
      404:
        description: Not found response
        body: {}